name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKER_IMAGE: ressbe/wealist-board
  DOCKER_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ressbe
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Extract version
        id: version
        run: |
          if [ -f "services/kanban/VERSION" ]; then
            VERSION=$(cat services/kanban/VERSION)
          else
            VERSION="0.1.1"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./services/kanban
          file: ./services/kanban/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
            ${{ env.DOCKER_IMAGE }}:${{ steps.version.outputs.version }}
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache,mode=max

      - name: Image digest
        run: |
          echo "Image pushed successfully!"
          echo "Tags: latest, ${{ steps.version.outputs.version }}, ${{ github.sha }}"

      - name: Trigger deployment workflow
        if: success()
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.DEPLOY_TRIGGER_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/ressKim-io/wealist-deploy-test/dispatches \
            -d '{"event_type":"new-image-pushed","client_payload":{"service":"board","version":"${{ steps.version.outputs.version }}","commit":"${{ github.sha }}","actor":"${{ github.actor }}"}}'
